/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three"
import React, { useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { GLTF } from "three-stdlib"

type GLTFResult = GLTF & {
  nodes: {
    [keys: string]: THREE.Mesh
  }
  materials: {
    [keys: string]: THREE.MeshStandardMaterial
  }
}

const AvatarDress = ({ ...props }: JSX.IntrinsicElements["group"]) => {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials } = useGLTF("/char/avatar_clothes/clothes.glb") as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      {/* AvatarDress */}
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.F_AREA_21SS_D004_1.geometry} material={materials.NewMat09} castShadow />
        <mesh geometry={nodes.F_AREA_21SS_D004_2.geometry} material={materials.NewMat09} castShadow />
        <mesh geometry={nodes.F_AREA_21SS_D004_3.geometry} material={materials.NewMat09} castShadow />
        <mesh geometry={nodes.F_AREA_21SS_D004_4.geometry} material={materials.NewMat09} castShadow />
        <mesh geometry={nodes.F_AREA_21SS_D004_5.geometry} material={materials.NewMat09} castShadow />
        <mesh geometry={nodes.F_AREA_21SS_D004_6.geometry} material={materials.NewMat09} castShadow />
      </group>
    </group>
  )
}

useGLTF.preload("/char/avatar_clothes/clothes.glb")

export default AvatarDress
